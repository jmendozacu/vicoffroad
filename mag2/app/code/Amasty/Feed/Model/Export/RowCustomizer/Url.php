<?php
/**
 * @author Amasty Team
 * @copyright Copyright (c) 2016 Amasty (https://www.amasty.com)
 * @package Amasty_Feed
 */

namespace Amasty\Feed\Model\Export\RowCustomizer;

use Magento\CatalogImportExport\Model\Export\RowCustomizerInterface;

class Url
{
    protected $_storeManager;
    protected $_urlRewrites;
    protected $_url;
    protected $_storeId;
    protected $_rowCategories;

    public function __construct(
        \Magento\Store\Model\StoreManagerInterface $storeManager,
        \Amasty\Feed\Model\Export\Product $export,
        \Magento\Framework\UrlInterface $url
    ){
        $this->_url = $url;
        $this->_export = $export;
        $this->_storeManager = $storeManager;
    }
    /**
     * @inheritdoc
     */
    public function prepareData($collection, $productIds)
    {
        if ($this->_export->hasAttributes(\Amasty\Feed\Model\Export\Product::PREFIX_URL_ATTRIBUTE)) {
            $this->_storeId = $collection->getStoreId();

            $select = $collection->getConnection()
                ->select()
                ->from(['u' => $collection->getTable('url_rewrite')], ['u.entity_id', 'u.request_path', 'u.metadata'])
                ->where('u.store_id = ?', $this->_storeId)
                ->where('u.is_autogenerated = 1')
                ->where('u.entity_type = ?', \Magento\CatalogUrlRewrite\Model\ProductUrlRewriteGenerator::ENTITY_TYPE)
                ->where('u.entity_id IN(?)', $productIds);


            foreach ($collection->getConnection()->fetchAll($select) as $row) {

                $metadata = @unserialize($row['metadata']);

                $categoryId = is_array($metadata) && isset($metadata['category_id']) ?
                    $metadata['category_id'] : null;

                if (!isset($row['entity_id'])) {
                    $this->_urlRewrites[$row['entity_id']] = array();
                }

                $this->_urlRewrites[$row['entity_id']][intval($categoryId)] = $row['request_path'];


            }

            $multirawData = $this->_export->getMultirawData();
            $this->_rowCategories = $multirawData['rowCategories'];
        }

        return;
    }

    /**
     * @inheritdoc
     */
    public function addHeaderColumns($columns)
    {
        return $columns;
    }

    /**
     * @inheritdoc
     */
    public function addData(&$dataRow, $productId)
    {
        $customData = &$dataRow['amasty_custom_data'];

        $categories = isset($this->_rowCategories[$productId]) ? $this->_rowCategories[$productId] : array();
        $lastCategoryId = count($categories) > 0 ? $categories[count($categories) - 1] : null;

        if ($this->_urlRewrites && isset($this->_urlRewrites[$productId])){
            $urlRewrites = $this->_urlRewrites[$productId];

//            $this->_export->g
            $utmParams = [];

            $routeParamsShort =
                [
                    '_direct' => isset($urlRewrites[0]) ? $urlRewrites[0] : end($urlRewrites),
                    '_query' => $this->_export->getUtmParams()
                ];

            $routeParamsWithCategory =
                [
                    '_direct' => isset($urlRewrites[$lastCategoryId]) ? $urlRewrites[$lastCategoryId] : end($urlRewrites),
                    '_query' => $this->_export->getUtmParams()
                ];

            $customData[\Amasty\Feed\Model\Export\Product::PREFIX_URL_ATTRIBUTE] = array(
                'short' => $this->_url->setScope($this->_storeId)->getUrl('', $routeParamsShort),
                'with_category' => $this->_url->setScope($this->_storeId)->getUrl('', $routeParamsWithCategory)
            );
        } else {
            $customData[\Amasty\Feed\Model\Export\Product::PREFIX_URL_ATTRIBUTE] = array(
                'short' => null,
                'with_category' => null
            );
        }

        return $dataRow;
    }

    /**
     * @inheritdoc
     */
    public function getAdditionalRowsCount($additionalRowsCount, $productId)
    {
        return $additionalRowsCount;
    }
}